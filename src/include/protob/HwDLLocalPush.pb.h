/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.8 at Sun Jul 16 23:12:22 2017. */

#ifndef PB_HWDLLOCALPUSH_PB_H_INCLUDED
#define PB_HWDLLOCALPUSH_PB_H_INCLUDED
#include <protob/pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif



typedef struct _HwDLLocalPush_ObjVoice {
    int32_t voiceId;
    char netPath[64];
    char localPath[64];
/* @@protoc_insertion_point(struct:HwDLLocalPush_ObjVoice) */
} HwDLLocalPush_ObjVoice;

/* Struct definitions */
typedef struct _HwDLLocalPush {
    pb_callback_t objVoice;
	//HwDLLocalPush_ObjVoice ObjVoice;
    int32_t dlType;
/* @@protoc_insertion_point(struct:HwDLLocalPush) */
} HwDLLocalPush;
/* Default values for struct fields */

/* Initializer values for message structs */
#define HwDLLocalPush_init_default               {{{NULL}, NULL}, 0}
#define HwDLLocalPush_ObjVoice_init_default      {0, {{NULL}, NULL}, {{NULL}, NULL}}
#define HwDLLocalPush_init_zero                  {{{NULL}, NULL}, 0}
#define HwDLLocalPush_ObjVoice_init_zero         {0, {{NULL}, NULL}, {{NULL}, NULL}}

/* Field tags (for use in manual encoding/decoding) */
#define HwDLLocalPush_objVoice_tag               1
#define HwDLLocalPush_dlType_tag                 2
#define HwDLLocalPush_ObjVoice_voiceId_tag       1
#define HwDLLocalPush_ObjVoice_netPath_tag       2
#define HwDLLocalPush_ObjVoice_localPath_tag     3

/* Struct field encoding specification for nanopb */
extern const pb_field_t HwDLLocalPush_fields[3];
extern const pb_field_t HwDLLocalPush_ObjVoice_fields[4];

/* Maximum encoded size of messages (where known) */
/* HwDLLocalPush_size depends on runtime parameters */
/* HwDLLocalPush_ObjVoice_size depends on runtime parameters */

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define HWDLLOCALPUSH_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
