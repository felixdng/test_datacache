/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.8 at Mon Jul 17 01:36:53 2017. */

#ifndef PB_HWDELETEDOWNLOADEDVOICEPUSH_PB_H_INCLUDED
#define PB_HWDELETEDOWNLOADEDVOICEPUSH_PB_H_INCLUDED
#include <protob/pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _HwDeleteDownloadedVoicePush {
    int32_t voiceIds;
    pb_callback_t objVoice;
/* @@protoc_insertion_point(struct:HwDeleteDownloadedVoicePush) */
} HwDeleteDownloadedVoicePush;

typedef struct _HwDeleteDownloadedVoicePush_ObjVoice {
    int32_t voiceId;
    bool has_voiceType;
    int32_t voiceType;
/* @@protoc_insertion_point(struct:HwDeleteDownloadedVoicePush_ObjVoice) */
} HwDeleteDownloadedVoicePush_ObjVoice;

/* Default values for struct fields */

/* Initializer values for message structs */
#define HwDeleteDownloadedVoicePush_init_default {{{NULL}, NULL}, {{NULL}, NULL}}
#define HwDeleteDownloadedVoicePush_ObjVoice_init_default {0, false, 0}
#define HwDeleteDownloadedVoicePush_init_zero    {{{NULL}, NULL}, {{NULL}, NULL}}
#define HwDeleteDownloadedVoicePush_ObjVoice_init_zero {0, false, 0}

/* Field tags (for use in manual encoding/decoding) */
#define HwDeleteDownloadedVoicePush_voiceIds_tag 1
#define HwDeleteDownloadedVoicePush_objVoice_tag 2
#define HwDeleteDownloadedVoicePush_ObjVoice_voiceId_tag 1
#define HwDeleteDownloadedVoicePush_ObjVoice_voiceType_tag 2

/* Struct field encoding specification for nanopb */
extern const pb_field_t HwDeleteDownloadedVoicePush_fields[3];
extern const pb_field_t HwDeleteDownloadedVoicePush_ObjVoice_fields[3];

/* Maximum encoded size of messages (where known) */
/* HwDeleteDownloadedVoicePush_size depends on runtime parameters */
#define HwDeleteDownloadedVoicePush_ObjVoice_size 22

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define HWDELETEDOWNLOADEDVOICEPUSH_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
