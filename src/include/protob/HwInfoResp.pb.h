/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.8 at Wed Sep 27 16:51:39 2017. */

#ifndef PB_HWINFORESP_PB_H_INCLUDED
#define PB_HWINFORESP_PB_H_INCLUDED
#include <protob/pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _HwInfoResp {
    int64_t status;
    char nickName[128];
/* @@protoc_insertion_point(struct:HwInfoResp) */
} HwInfoResp;

/* Default values for struct fields */

/* Initializer values for message structs */
#define HwInfoResp_init_default                  {0, ""}
#define HwInfoResp_init_zero                     {0, ""}

/* Field tags (for use in manual encoding/decoding) */
#define HwInfoResp_status_tag                    1
#define HwInfoResp_nickName_tag                  2

/* Struct field encoding specification for nanopb */
extern const pb_field_t HwInfoResp_fields[3];

/* Maximum encoded size of messages (where known) */
#define HwInfoResp_size                          142

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define HWINFORESP_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
