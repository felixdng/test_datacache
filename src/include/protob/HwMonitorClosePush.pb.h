/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.8 at Sun Sep 10 03:52:49 2017. */

#ifndef PB_HWMONITORCLOSEPUSH_PB_H_INCLUDED
#define PB_HWMONITORCLOSEPUSH_PB_H_INCLUDED
#include <protob/pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _HwMonitorClosePush {
    int32_t userId;
/* @@protoc_insertion_point(struct:HwMonitorClosePush) */
} HwMonitorClosePush;

/* Default values for struct fields */

/* Initializer values for message structs */
#define HwMonitorClosePush_init_default          {0}
#define HwMonitorClosePush_init_zero             {0}

/* Field tags (for use in manual encoding/decoding) */
#define HwMonitorClosePush_userId_tag            1

/* Struct field encoding specification for nanopb */
extern const pb_field_t HwMonitorClosePush_fields[2];

/* Maximum encoded size of messages (where known) */
#define HwMonitorClosePush_size                  11

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define HWMONITORCLOSEPUSH_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
