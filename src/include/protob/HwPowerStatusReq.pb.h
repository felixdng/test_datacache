/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.8 at Tue Jul 18 19:08:56 2017. */

#ifndef PB_HWPOWERSTATUSREQ_PB_H_INCLUDED
#define PB_HWPOWERSTATUSREQ_PB_H_INCLUDED
#include <protob/pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _HwPowerStatusReq {
    char serialNum[64];
    int32_t power;
    int32_t powerStatus;
    int32_t sleepMode;
    int32_t timing;
/* @@protoc_insertion_point(struct:HwPowerStatusReq) */
} HwPowerStatusReq;

/* Default values for struct fields */

/* Initializer values for message structs */
#define HwPowerStatusReq_init_default            {{{NULL}, NULL}, 0, 0, 0, 0}
#define HwPowerStatusReq_init_zero               {{{NULL}, NULL}, 0, 0, 0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define HwPowerStatusReq_serialNum_tag           1
#define HwPowerStatusReq_power_tag               2
#define HwPowerStatusReq_powerStatus_tag         3
#define HwPowerStatusReq_sleepMode_tag           4
#define HwPowerStatusReq_timing_tag              5

/* Struct field encoding specification for nanopb */
extern const pb_field_t HwPowerStatusReq_fields[6];

/* Maximum encoded size of messages (where known) */
/* HwPowerStatusReq_size depends on runtime parameters */

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define HWPOWERSTATUSREQ_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
