/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.8 at Wed Jul 12 20:38:44 2017. */

#ifndef PB_HWREGISTERRESP_PB_H_INCLUDED
#define PB_HWREGISTERRESP_PB_H_INCLUDED
#include <protob/pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _HwRegisterResp_Result {
    char avatar[64];
/* @@protoc_insertion_point(struct:HwRegisterResp_Result) */
} HwRegisterResp_Result;

typedef struct _HwRegisterResp {
    int32_t state;
    char msg[64];
    bool has_result;
    HwRegisterResp_Result result;
/* @@protoc_insertion_point(struct:HwRegisterResp) */
} HwRegisterResp;

/* Default values for struct fields */

/* Initializer values for message structs */
#define HwRegisterResp_init_default              {0, {{NULL}, NULL}, false, HwRegisterResp_Result_init_default}
#define HwRegisterResp_Result_init_default       {{{NULL}, NULL}}
#define HwRegisterResp_init_zero                 {0, {{NULL}, NULL}, false, HwRegisterResp_Result_init_zero}
#define HwRegisterResp_Result_init_zero          {{{NULL}, NULL}}

/* Field tags (for use in manual encoding/decoding) */
#define HwRegisterResp_Result_avatar_tag         1
#define HwRegisterResp_state_tag                 1
#define HwRegisterResp_msg_tag                   2
#define HwRegisterResp_result_tag                3

/* Struct field encoding specification for nanopb */
extern const pb_field_t HwRegisterResp_fields[4];
extern const pb_field_t HwRegisterResp_Result_fields[2];

/* Maximum encoded size of messages (where known) */
/* HwRegisterResp_size depends on runtime parameters */
/* HwRegisterResp_Result_size depends on runtime parameters */

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define HWREGISTERRESP_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
